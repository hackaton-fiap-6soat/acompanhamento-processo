name: Deploy Infra and Lambda

on:
  push:
    branches:
      - main

jobs:
  # Job 1: Configuração do ambiente e construção do pacote
  setup_and_build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Instalar dependências e criar pacote ZIP
        run: |
          pip install -r requirements.txt --platform manylinux2014_x86_64 --target build/ --only-binary=:all:
          cp -r app/* build/
          cd build && zip -r ../lambda-api.zip .    # Certifique-se de que os arquivos estão na raiz
          cd ..
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Salvar pacote ZIP como artefato
        uses: actions/upload-artifact@v3
        with:
          name: lambda-api.zip
          path: lambda-api.zip

  # Job 2: Criar o bucket S3 e enviar o arquivo ZIP
  upload_to_s3:
    needs: setup_and_build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Baixar pacote ZIP
        uses: actions/download-artifact@v3
        with:
          name: lambda-api.zip
          path: .

      - name: Criar bucket S3 e enviar arquivo ZIP
        run: |
          BUCKET_NAME="lambda-code-acompanhamento"
          echo "BUCKET_NAME=$BUCKET_NAME" >> $GITHUB_ENV
          aws s3api create-bucket --bucket $BUCKET_NAME --region us-east-1
          aws s3 cp lambda-api.zip s3://$BUCKET_NAME/lambda-api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

  # Job 3: Aplicação do Terraform
  terraform_apply:
    needs: upload_to_s3
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Inicializar o Terraform
        run: |
          cd terraform
          terraform init -backend-config="bucket=${{ secrets.TERRAFORM_STATE_BUCKET }}" \
                         -backend-config="key=terraform/state/hackaton.tfstate" \
                         -backend-config="region=us-east-1" \
                         -backend-config="encrypt=true"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Aplicar configuração Terraform
        run: |
          cd terraform
          terraform apply -auto-approve -var "s3_bucket_name=$BUCKET_NAME"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
